{
  "ramlVersion": "RAML10",
  "type": "Api",
  "specification": {
    "uses": [
      {
        "key": "typesLib",
        "value": "libraries/types.raml",
        "sourceMap": {
          "path": "api.raml"
        }
      },
      {
        "key": "lib2",
        "value": "libraries/annotations.raml",
        "sourceMap": {
          "path": "api.raml"
        }
      }
    ],
    "traits": [
      {
        "tr": {
          "annotations": {
            "lib2.MyAnnotation": {
              "structuredValue": "stringValue",
              "name": "lib2.MyAnnotation"
            }
          },
          "body": {
            "application/json": {
              "name": "application/json",
              "displayName": "application/json",
              "typePropertyKind": "TYPE_EXPRESSION",
              "type": [
                "typesLib.LibType"
              ],
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  }
                }
              },
              "sourceMap": {
                "path": "traits/trait.raml"
              }
            }
          },
          "name": "tr",
          "sourceMap": {
            "path": "traits/trait.raml"
          }
        }
      }
    ],
    "title": "test API.",
    "version": "v1",
    "baseUri": "https://example.com/raml",
    "protocols": [
      "HTTPS"
    ],
    "resources": [
      {
        "methods": [
          {
            "annotations": {
              "lib2.MyAnnotation": {
                "structuredValue": "stringValue",
                "name": "lib2.MyAnnotation"
              }
            },
            "body": {
              "application/json": {
                "name": "application/json",
                "displayName": "application/json",
                "typePropertyKind": "TYPE_EXPRESSION",
                "type": [
                  "typesLib.LibType"
                ],
                "example": {
                  "p1": "stringValue",
                  "p2": "invalidValue"
                },
                "__METADATA__": {
                  "primitiveValuesMeta": {
                    "displayName": {
                      "calculated": true
                    }
                  }
                },
                "sourceMap": {
                  "path": "api.raml"
                },
                "structuredExample": {
                  "value": "{\n  \"p1\": \"stringValue\",\n  \"p2\": \"invalidValue\"\n}",
                  "strict": true,
                  "name": null,
                  "structuredValue": {
                    "p1": "stringValue",
                    "p2": "invalidValue"
                  },
                  "sourceMap": {
                    "path": "api.raml"
                  }
                }
              }
            },
            "protocols": [
              "HTTPS"
            ],
            "method": "post",
            "__METADATA__": {
              "primitiveValuesMeta": {
                "protocols": {
                  "calculated": true
                }
              }
            },
            "sourceMap": {
              "path": "api.raml"
            }
          }
        ],
        "is": [
          "tr"
        ],
        "relativeUri": "/resource",
        "displayName": "/resource",
        "__METADATA__": {
          "primitiveValuesMeta": {
            "displayName": {
              "calculated": true
            }
          }
        },
        "sourceMap": {
          "path": "api.raml"
        },
        "relativeUriPathSegments": [
          "resource"
        ],
        "absoluteUri": "https://example.com/raml/resource"
      }
    ],
    "__METADATA__": {
      "primitiveValuesMeta": {
        "protocols": {
          "calculated": true
        }
      }
    },
    "sourceMap": {
      "path": "api.raml"
    }
  },
  "errors": [
    {
      "code": "TYPE_EXPECTED",
      "message": "Expected type 'number' but got 'string'",
      "path": "api.raml",
      "range": {
        "start": {
          "line": 18,
          "column": 10,
          "position": 276
        },
        "end": {
          "line": 18,
          "column": 12,
          "position": 278
        }
      }
    }
  ]
}